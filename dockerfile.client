# --------------------------------
# Base
# --------------------------------
FROM node:10.16-alpine AS base

WORKDIR /app

# Native dependencies
RUN apk add --no-cache make gcc g++ python

# Install dockerize
ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
&& rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# Add packages
COPY package.json yarn.lock ./
COPY packages/client/package.json ./packages/client/
COPY packages/common/package.json ./packages/common/
COPY packages/server/package.json ./packages/server/
COPY packages/validation/package.json ./packages/validation/

# --------------------------------
# Dependencies
# --------------------------------
FROM base AS dependencies

# Install production dependencies
RUN yarn install --prod --pure-lockfile --non-interactive --silent
RUN cp -R node_modules prod_node_modules

# Install dev dependencies
RUN yarn install --non-interactive --silent

# --------------------------------
# Release
# --------------------------------
FROM base AS release

# Production dependencies
COPY --from=dependencies /app/prod_node_modules ./node_modules
COPY --from=dependencies /app/packages/client/node_modules ./packages/client/node_modules
COPY packages/common ./packages/common

WORKDIR ./packages/client

# Build files
COPY packages/client/build ./

USER node

EXPOSE 3000

CMD [ "node", "server.js" ]
