# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  id: ID!
  city: String!
  country: String!
  line1: String!
  line2: String!
  postalCode: String!
  subdivision: String!
  type: AddressType!
  typeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AddressInput {
  city: String!
  country: String!
  line1: String!
  line2: String
  postalCode: String!
  subdivision: String!
  typeName: String!
}

type AddressType {
  id: ID!
  name: String!
}

type Country {
  id: ID!
  alpha2Code: String!
  callingCode: String!
  name: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Email {
  id: ID!
  isVerified: Boolean!
  userId: ID!
  value: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type EnableTwoFactorAuthResponse {
  error: ResponseError
  dataUrl: String
  secret: String
}

type Media {
  id: ID!
  mimeType: String!
  name: String!
  path: String!
  type: MediaType!
  typeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MediaResponse {
  error: ResponseError
  media: Media
}

type MediaType {
  id: ID!
  name: String!
}

type Mutation {
  confirmTwoFactorAuth(token: String!): Response!
  disableTwoFactorAuth(token: String!): Response!
  enableTwoFactorAuth: EnableTwoFactorAuthResponse!
  signIn(password: String!, email: String!): UserResponse!
  signInTwoFactorAuth(token: String!, password: String!, email: String!): UserResponse!
  signOut: Response!
  updateProfile(input: ProfileInput!): ProfileResponse!
  confirmRegistration(token: String!): UserResponse!
  register(input: RegisterInput!): Response!
  updateEmail: UserResponse!
  updatePassword(password: String!, newPassword: String!): Response!
}

type Phone {
  id: ID!
  country: Country!
  countryId: ID!
  ext: String!
  isVerified: Boolean!
  number: String!
  type: PhoneType!
  typeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input PhoneInput {
  alpha2Code: String!
  number: String!
  typeName: String!
}

type PhoneType {
  id: ID!
  name: String!
}

type Profile {
  id: ID!
  familyName: String!
  givenName: String!
  userId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProfileInput {
  familyName: String!
  givenName: String!
}

type ProfileResponse {
  error: ResponseError
  profile: Profile
}

type Query {
  country(id: ID!): Country
  countries: [Country!]!
  currentUser: User
  user(id: ID!): User
  users: [User!]!
}

input RegisterInput {
  email: String!
  password: String!
  profile: ProfileInput!
}

type Response {
  error: ResponseError
}

type ResponseError {
  id: ID!
  message: String!
}

type User {
  id: ID!
  emails: [Email!]!
  isAdmin: Boolean!
  profile: Profile!
  createdAt: DateTime!
  updatedAt: DateTime!
  isTwoFactorAuthEnabled: Boolean!
}

type UserResponse {
  error: ResponseError
  user: User
}
