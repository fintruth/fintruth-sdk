version: 2.1
commands:
  persist_package_build:
    description: |
      Persist a package's compiled build output to be used by another job in
      the workflow.

      The working directory of the job is taken to be the root directory of the
      workspace. The `path` value is relative to the root.

      The `path` uses `Glob` from Go, and the pattern matches `filepath.Match`.
    parameters:
      path:
        type: string
        description: Path to the compiled build output.
        default: build
      working_directory:
        type: string
        description: In which directory to run the steps.
        default: .
    steps:
      - run:
          name: Build
          command: yarn --silent build
          working_directory: << parameters.working_directory >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.path >>
  with_cache:
    description: |
      Run a set of steps with Node dependencies cached.

      This command will first restore a cache of Node dependencies if one was
      saved by a previous build. The provided `steps` will then be executed,
      and if successful, a fresh cache will be saved, if required.

      The contents of the root and packages node_modules directories are
      cached, which will substantially improve build times.

      The cache_key is generated from `yarn.lock`. This file path can be
      changed with the `cache_key` parameter.
    parameters:
      steps:
        type: steps
        description: Input any custom steps to run with your Node cache.
        default: []
      cache_key:
        type: string
        description: File to use as a Node cache checksum.
        default: yarn.lock
      cache_version:
        type: string
        description: Cache version; increment this for a fresh cache.
        default: v2
    steps:
      - restore_cache:
          keys:
            - node-dependencies-<< parameters.cache_version >>-{{ .Branch }}--{{ checksum "<< parameters.cache_key >>" }}
            - node-dependencies-<< parameters.cache_version >>-{{ .Branch }}--
            - node-dependencies-<< parameters.cache_version >>-
      - steps: << parameters.steps >>
      - save_cache:
          key: node-dependencies-<< parameters.cache_version >>-{{ .Branch }}--{{ checksum "<< parameters.cache_key >>" }}
          paths:
            - ~/fintruth-sdk/node_modules
            - ~/fintruth-sdk/packages/auth/node_modules
            - ~/fintruth-sdk/packages/client/node_modules
            - ~/fintruth-sdk/packages/common/node_modules
            - ~/fintruth-sdk/packages/server/node_modules
            - ~/fintruth-sdk/packages/validation/node_modules
executors:
  cypress:
    parameters:
      tag:
        type: string
        description: Pick a specific cypress/base image variant.
        default: 10.15.3
    docker:
      - image: cypress/base:<< parameters.tag >>
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_DB: fintruth
          POSTGRES_USER: postgres
  node:
    parameters:
      tag:
        type: string
        description: Pick a specific circleci/node image variant.
        default: 10.15.3
    docker:
      - image: circleci/node:<< parameters.tag >>
jobs:
  auth:
    environment:
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - with_cache
      - run:
          name: Setup
          command: mkdir --parents ${REPORTS_DIR}
          working_directory: packages/auth
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:scripts --format junit --output-file ${REPORTS_DIR}/lint-scripts.xml
            yarn --silent lint:types
          working_directory: packages/auth
      - run:
          name: Run tests
          command: yarn --silent test:units --runInBand --reporters default jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test-units.xml
          working_directory: packages/auth
      - persist_package_build:
          path: packages/auth/build
          working_directory: packages/auth
      - store_artifacts:
          path: packages/auth/reports
          destination: reports
      - store_test_results:
          path: packages/auth/reports
  client:
    environment:
      COVERAGE_DIR: coverage
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - with_cache
      - run:
          name: Setup
          command: mkdir --parents ${COVERAGE_DIR} ${REPORTS_DIR}
          working_directory: packages/client
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:scripts --format junit --output-file ${REPORTS_DIR}/lint-scripts.xml
            yarn --silent lint:styles --custom-formatter ../../node_modules/stylelint-junit-formatter > ${REPORTS_DIR}/lint-styles.xml
            yarn --silent lint:types
          working_directory: packages/client
      - run:
          name: Run tests
          command: yarn --silent test:units --coverage --runInBand --reporters default jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test-units.xml
          working_directory: packages/client
      - run:
          name: Publish code coverage results
          command: yarn --silent codecov -F client
      - store_artifacts:
          path: packages/client/coverage
          destination: coverage
      - store_artifacts:
          path: packages/client/reports
          destination: reports
      - store_test_results:
          path: packages/client/reports
  common:
    environment:
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk/packages/common
    steps:
      - checkout
      - with_cache:
          steps:
            - run:
                name: Install dependencies
                command: yarn install --frozen-lockfile
      - run:
          name: Setup
          command: mkdir --parents ${REPORTS_DIR}
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:scripts --format junit --output-file ${REPORTS_DIR}/lint-scripts.xml
            yarn --silent lint:types
      - run:
          name: Run tests
          command: yarn --silent test:units --runInBand --reporters default jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test-units.xml
      - persist_package_build:
          path: build
      - store_artifacts:
          path: reports
          destination: reports
      - store_test_results:
          path: reports
  root:
    environment:
      OUTPUT_DIR: output
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - with_cache
      - run:
          name: Setup
          command: mkdir --parents ${OUTPUT_DIR} ${REPORTS_DIR}
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:types
      - run:
          name: Run tests
          command: |
            yarn --silent lerna run --parallel --scope @fintruth-sdk/client --scope @fintruth-sdk/server --stream build
            yarn --silent lerna exec --no-prefix --scope @fintruth-sdk/client --stream node build/server.js &> ${OUTPUT_DIR}/client.txt &
            yarn --silent lerna exec --no-prefix --scope @fintruth-sdk/server --stream node build/main.js &> ${OUTPUT_DIR}/server.txt &
            yarn --silent test:e2e --reporter junit --reporter-options "mochaFile=${REPORTS_DIR}/test-e2e.xml"
          environment:
            API_URI: http://localhost:4000/api
            AWS_REGION: us-west-2
            AWS_S3_BUCKET_UPLOADS: fintruth-test
            CLIENT_PORT: 3000
            CLIENT_URL: http://localhost:3000
            DB_HOST: localhost
            DB_USERNAME: postgres
            DB_DATABASE: fintruth
            GRAPHQL_RATE_LIMIT_MAX: 10
            GRAPHQL_RATE_LIMIT_WINDOW: 10s
            SERVER_PORT: 4000
      - store_artifacts:
          path: output
          destination: output
      - store_artifacts:
          path: reports
          destination: reports
      - store_test_results:
          path: reports
  server:
    environment:
      COVERAGE_DIR: coverage
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - with_cache
      - run:
          name: Setup
          command: mkdir --parents ${COVERAGE_DIR} ${REPORTS_DIR}
          working_directory: packages/server
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:scripts --format junit --output-file ${REPORTS_DIR}/lint-scripts.xml
            yarn --silent lint:types
          working_directory: packages/server
      - run:
          name: Run tests
          command: yarn --silent test:units --coverage --runInBand --reporters default jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test-units.xml
          working_directory: packages/server
      - run:
          name: Publish code coverage results
          command: yarn --silent codecov -F server
      - store_artifacts:
          path: packages/server/coverage
          destination: coverage
      - store_artifacts:
          path: packages/server/reports
          destination: reports
      - store_test_results:
          path: packages/server/reports
  validation:
    environment:
      REPORTS_DIR: reports
    executor: cypress
    working_directory: ~/fintruth-sdk
    steps:
      - checkout
      - with_cache
      - run:
          name: Setup
          command: mkdir --parents ${REPORTS_DIR}
          working_directory: packages/validation
      - run:
          name: Run static analysis
          command: |
            yarn --silent lint:files
            yarn --silent lint:scripts --format junit --output-file ${REPORTS_DIR}/lint-scripts.xml
            yarn --silent lint:types
          working_directory: packages/validation
      - run:
          name: Run tests
          command: yarn --silent test:units --runInBand --reporters default jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test-units.xml
          working_directory: packages/validation
      - persist_package_build:
          path: packages/validation/build
          working_directory: packages/validation
      - store_artifacts:
          path: packages/validation/reports
          destination: reports
      - store_test_results:
          path: packages/validation/reports
workflows:
  version: 2.1
  test:
    jobs:
      - auth:
          requires:
            - common
      - common
      - client:
          requires:
            - common
            - validation
      - root:
          requires:
            - client
            - server
      - server:
          requires:
            - auth
            - common
            - validation
      - validation:
          requires:
            - common
